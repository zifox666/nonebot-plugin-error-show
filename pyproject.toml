[project]
name = "nonebot-plugin-error-show"
version = "0.1.1"
description = "nonebot的报错提示插件"
readme = "README.md"
authors = [{ name = "zifox666", email = "zifox666@gmail.com" }]
urls = { Repository = "https://github.com/zifox666/nonebot-plugin-error-show" }
requires-python = ">=3.10"
dependencies = [
  "nonebot2>=2.4.2,<3.0.0",
  "nonebot-plugin-localstore>=0.7.4,<1.0.0",
  "nonebot-plugin-alconna>=0.59.3,<1.0.0",
  # "nonebot-adapter-onebot>=2.4.6,<3.0.0"
  "nonebot-plugin-htmlrender>=0.6.6",
  "qrcode[pil]>=8.2",
  "nonebot-plugin-orm[default]>=0.8.2",
  "nonebot-plugin-uninfo>=0.9.0",
]

[dependency-groups]
dev = [
  "nonebot2[fastapi]>=2.4.2,<3.0.0",
  "ruff>=0.12.7,<1.0.0",
  "nonebot-adapter-onebot>=2.4.6,<3.0.0",
]

[tool.nonebot]
# plugins = []
plugin_dirs = ["src"]

adapters = [
    { name = "OneBot V11", module_name = "nonebot.adapters.onebot.v11" }
]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
  "F",     # Pyflakes
  "W",     # pycodestyle warnings
  "E",     # pycodestyle errors
  "I",     # isort
  "UP",    # pyupgrade
  "ASYNC", # flake8-async
  "C4",    # flake8-comprehensions
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "TID",   # flake8-tidy-imports
  "RUF",   # Ruff-specific rules
]
ignore = [
  "E402",   # module-import-not-at-top-of-file
  "UP037",  # quoted-annotation
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
  "W191",   # indentation contains tabs
  "TID252", # relative import
]


[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["tests/*"]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true


[tool.pyright]
pythonVersion = "3.10"
pythonPlatform = "All"
defineConstant = { PYDANTIC_V2 = true }
executionEnvironments = [
  { root = "./tests", extraPaths = [
    "./src",
  ] },
  { root = "./src" },
]
typeCheckingMode = "standard"
reportShadowedImports = false
disableBytesTypePromotions = true


[build-system]
requires = ["uv_build>=0.8.0,<0.9.0"]
build-backend = "uv_build"
